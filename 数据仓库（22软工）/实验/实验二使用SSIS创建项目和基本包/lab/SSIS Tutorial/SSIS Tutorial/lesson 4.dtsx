<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="12/26/2024 5:31:13 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-G68IO0G"
  DTS:CreatorName="DESKTOP-G68IO0G\moqi"
  DTS:DTSID="{9405CE6A-FB65-4C4F-9B1A-9880E4B3C538}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="2052"
  DTS:ObjectName="lesson 4"
  DTS:PackageType="5"
  DTS:VersionBuild="21"
  DTS:VersionGUID="{AA7C2087-C5C0-469C-8B67-106A0723E887}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[localhost.AdventureWorksDW2022]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{693F74F3-5748-47AB-A04B-26EB66E0A7F8}"
      DTS:ObjectName="localhost.AdventureWorksDW2022">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=localhost;User ID=;Initial Catalog=AdventureWorksDW2022;Provider=MSOLEDBSQL.1;Persist Security Info=False;Integrated Security=SSPI;Initial File Name=;Trust Server Certificate=True;Server SPN=;Authentication=;Access Token=;Application Name=SSIS-lesson 1-{693F74F3-5748-47AB-A04B-26EB66E0A7F8}localhost.AdventureWorksDW2022;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[TutorialLog.log]"
      DTS:CreationName="FILE"
      DTS:DTSID="{E818F057-BF91-4940-B3CC-C1F4E1C79530}"
      DTS:ObjectName="TutorialLog.log">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="1"
          DTS:ConnectionString="D:\Desktop\project\数据仓库\数据仓库（22软工）\数据仓库（22软工）\实验\实验二使用SSIS创建项目和基本包\lab\TutorialLog.log" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[示例平面文件源数据]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{3F8AD46F-6AFA-4FC3-92BD-D4F91B622EE2}"
      DTS:ObjectName="示例平面文件源数据">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::varFileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="4"
              DTS:TextQualified="True"
              DTS:ObjectName="AverageRate"
              DTS:DTSID="{46CAC2C8-0CE5-4CF7-A25A-B323A8FCDC79}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="3"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="CurrencyID"
              DTS:DTSID="{5008F19E-FEE1-4FEE-949D-C55CD7BF7F6F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:DataType="133"
              DTS:TextQualified="True"
              DTS:ObjectName="CurrencyDate"
              DTS:DTSID="{68B7349D-0164-483B-8C3A-83F02F8884F6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="4"
              DTS:TextQualified="True"
              DTS:ObjectName="EndOfDayRate"
              DTS:DTSID="{BC4D64B1-43BD-47B8-AEC6-B53305DE0227}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[错误数据]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{D8B907B6-EAD2-4621-97C7-B598E5318575}"
      DTS:ObjectName="错误数据">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="D:\Desktop\project\数据仓库\数据仓库（22软工）\数据仓库（22软工）\实验\实验二使用SSIS创建项目和基本包\lab\ErrorOutput.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="4"
              DTS:TextQualified="True"
              DTS:ObjectName="AverageRate"
              DTS:DTSID="{3D43BABC-F3B0-4A64-A0DD-D5A74DB383EC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="3"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="CurrencyID"
              DTS:DTSID="{5F1DF4D9-9034-4B47-A036-DCE2A13B9507}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="133"
              DTS:TextQualified="True"
              DTS:ObjectName="CurrencyDate"
              DTS:DTSID="{39E92006-CC14-46A5-8976-93D4D57501CC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="4"
              DTS:TextQualified="True"
              DTS:ObjectName="EndOfDayRate"
              DTS:DTSID="{1B398D60-FF58-408F-85D1-B5FD1AC68425}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorCode"
              DTS:DTSID="{22AA7A44-BD0C-49A8-9316-D3F845B42656}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorColumn"
              DTS:DTSID="{6732D3DC-7C8E-4C99-9278-73EE99DDC6C5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorDescription"
              DTS:DTSID="{5FA031C0-AA85-4CF2-98EF-54FE0D7C702A}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="TutorialLog.log"
      DTS:CreationName="Microsoft.LogProviderTextFile"
      DTS:Description="将事件的日志项写入 CSV 文件"
      DTS:DTSID="{0DA56E72-25D4-4460-8C31-FD33DE45DF90}"
      DTS:ObjectName="Lesson 3 Log File">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7E769BBF-6B0C-476A-B356-6C8BCE695AC9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varFileName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="2" />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach File in Folder"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach 循环容器"
      DTS:DTSID="{46C61915-1FEF-44D3-8A39-A6EC18958553}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="1033"
      DTS:ObjectName="Foreach File in Folder">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{754BEDB9-3145-4F7A-80E1-FF150B169F40}"
        DTS:ObjectName="{754BEDB9-3145-4F7A-80E1-FF150B169F40}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="D:\Desktop\project\数据仓库\数据仓库（22软工）\数据仓库（22软工）\实验\实验二使用SSIS创建项目和基本包\Creating a Simple ETL Package\Creating a Simple ETL Package\Sample Data" />
            <FEFEProperty
              FileSpec="Currency_*.txt" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="2" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach File in Folder\Extract Sample Currency Data"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="数据流任务"
          DTS:DTSID="{AA813447-5BB7-4E7F-B659-8235D58DCEB6}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="1033"
          DTS:ObjectName="Extract Sample Currency Data">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0"
            DTS:LoggingMode="1">
            <DTS:Property
              DTS:DataType="8"
              DTS:Name="EventFilter">2,21,PipelineExecutionPlan,22,PipelineExecutionTrees</DTS:Property>
            <DTS:Property
              DTS:EventName="PipelineExecutionPlan"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:Property
              DTS:EventName="PipelineExecutionTrees"
              DTS:Name="ColumnFilter">
              <DTS:Property
                DTS:Name="Computer">-1</DTS:Property>
              <DTS:Property
                DTS:Name="Operator">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceName">-1</DTS:Property>
              <DTS:Property
                DTS:Name="SourceID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="ExecutionID">-1</DTS:Property>
              <DTS:Property
                DTS:Name="MessageText">-1</DTS:Property>
              <DTS:Property
                DTS:Name="DataBytes">-1</DTS:Property>
            </DTS:Property>
            <DTS:SelectedLogProviders>
              <DTS:SelectedLogProvider
                DTS:InstanceID="{0DA56E72-25D4-4460-8C31-FD33DE45DF90}" />
            </DTS:SelectedLogProviders>
          </DTS:LoggingOptions>
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="平面文件源;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; 保留所有权利; http://www.microsoft.com/sql/support;1"
                  description="平面文件源"
                  localeId="1033"
                  name="Extract Sample Currency Data"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="指定是否将长度为 0 的列视为 Null。"
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="指定包含该文件名的输出列的名称。如果未指定名称，则不会生成包含该文件名的输出列。"
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[示例平面文件源数据]"
                      connectionManagerRefId="Package.ConnectionManagers[示例平面文件源数据]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出]"
                      name="平面文件源输出">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出].Columns[AverageRate]"
                          dataType="r4"
                          errorOrTruncationOperation="转换"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出].ExternalColumns[AverageRate]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出].Columns[AverageRate]"
                          name="AverageRate"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="指示该列是否使用更快、不分区域设置的分析例程。"
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="指示数据是否为二进制格式。"
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出].Columns[CurrencyID]"
                          dataType="wstr"
                          errorOrTruncationOperation="转换"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出].ExternalColumns[CurrencyID]"
                          length="3"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出].Columns[CurrencyID]"
                          name="CurrencyID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="指示该列是否使用更快、不分区域设置的分析例程。"
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="指示数据是否为二进制格式。"
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出].Columns[CurrencyDate]"
                          dataType="dbDate"
                          errorOrTruncationOperation="转换"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出].ExternalColumns[CurrencyDate]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出].Columns[CurrencyDate]"
                          name="CurrencyDate"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="指示该列是否使用更快、不分区域设置的分析例程。"
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="指示数据是否为二进制格式。"
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出].Columns[EndOfDayRate]"
                          dataType="r4"
                          errorOrTruncationOperation="转换"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出].ExternalColumns[EndOfDayRate]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出].Columns[EndOfDayRate]"
                          name="EndOfDayRate"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="指示该列是否使用更快、不分区域设置的分析例程。"
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="指示数据是否为二进制格式。"
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出].ExternalColumns[AverageRate]"
                          dataType="r4"
                          name="AverageRate" />
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出].ExternalColumns[CurrencyID]"
                          dataType="wstr"
                          length="3"
                          name="CurrencyID" />
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出].ExternalColumns[CurrencyDate]"
                          dataType="dbDate"
                          name="CurrencyDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出].ExternalColumns[EndOfDayRate]"
                          dataType="r4"
                          name="EndOfDayRate" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源错误输出]"
                      isErrorOut="true"
                      name="平面文件源错误输出">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源错误输出].Columns[平面文件源错误输出列]"
                          codePage="1252"
                          dataType="text"
                          description="平面文件源错误输出列"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源错误输出].Columns[平面文件源错误输出列]"
                          name="平面文件源错误输出列" />
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源错误输出].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源错误输出].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源错误输出].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源错误输出].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach File in Folder\Extract Sample Currency Data\Get Error Description"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="包含并运行自定义脚本代码。例如，应用限制 &quot;income&quot; 列中的有效值范围的业务规则，或在两个列中添加值并计算和的平均值。;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; 保留所有权利; http://www.microsoft.com/sql/support;13"
                  description="包含并运行自定义脚本代码。例如，应用限制 &quot;income&quot; 列中的有效值范围的业务规则，或在两个列中添加值并计算和的平均值。"
                  name="Get Error Description"
                  version="13">
                  <properties>
                    <property
                      dataType="System.String"
                      description="存储组件的源代码"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"输入 0", StringComparison.Ordinal))
        {
            输入0_ProcessInput(new 输入0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void 输入0_ProcessInput(输入0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            输入0_ProcessInputRow(Buffer);
        }
    }

    public virtual void 输入0_ProcessInputRow(输入0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from 输入0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void 输入0_ProcessInputRow(输入0Buffer Row)
    {
        /*
         * Add your code here
         */
        Row.ErrorDescription = this.ComponentMetaData.GetErrorDescription(Row.ErrorCode);
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class 输入0Buffer: ScriptBuffer

{
    public 输入0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String ErrorDescription
    {
        set
        {
            this[1] = value;
        }
    }
    public bool ErrorDescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("无法将 IsNull 属性设置为 False。请为该列赋值。");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_af7c324e029348d3be7a9edafb426276.Properties.Settings.get_Default():SC_af7c324e029348d3be7a9edafb426276.Properties.Sett" +
    "ings")]

namespace SC_af7c324e029348d3be7a9edafb426276.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_af7c324e029348d3be7a9edafb426276.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_af7c324e029348d3be7a9edafb426276.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_af7c324e029348d3be7a9edafb426276.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_af7c324e029348d3be7a9edafb426276.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_af7c324e029348d3be7a9edafb426276.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_af7c324e029348d3be7a9edafb426276</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_af7c324e029348d3be7a9edafb426276</msb:DisplayName>
    <msb:ProjectId>{5854AFED-F76D-4368-A407-8EF049356851}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_af7c324e029348d3be7a9edafb426276.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_af7c324e029348d3be7a9edafb426276")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_af7c324e029348d3be7a9edafb426276")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_af7c324e029348d3be7a9edafb426276.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7132e2d9-3f8e-42e4-b6f3-b4596fb94e83}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_af7c324e029348d3be7a9edafb426276</RootNamespace>
    <AssemblyName>SC_af7c324e029348d3be7a9edafb426276</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_af7c324e029348d3be7a9edafb426276" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="存储组件的二进制表示形式"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_af7c324e029348d3be7a9edafb426276.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANmPbGcAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAFjIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMQxAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAHBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAD4
MQAAAAAAAEgAAAACAAUAtCEAAFgPAAABAAAAAAAAAAwxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACipiAwIoEgAACgNvBgAABm8TAAAK
bwgAAAYqHgIoDAAABioqAgMEBSgUAAAKKlICexUAAAoCexYAAAoWlG8XAAAKKiICFigYAAAKKiYC
FwMoGQAACipaAywIAhcoGgAACipyAQAAcHMbAAAKeh4CKBwAAAoqHgIoHQAACip+AigeAAAKAgJz
EAAABn0BAAAEAgJzEQAABn0CAAAEKpIEcj8AAHAabx8AAAosFQIFAgMoIAAACg4EcwUAAAZvDgAA
BipKKwcCA28PAAAGA28KAAAGLfEqBio6AighAAAKAgN9AwAABCo6AighAAAKAgN9BAAABCoeAigh
AAAKKq5+BQAABC0eckkAAHDQBwAAAigiAAAKbyMAAApzJAAACoAFAAAEfgUAAAQqGn4GAAAEKh4C
gAYAAAQqGn4HAAAEKh4CKCUAAAoqLnMXAAAGgAcAAAQqAAAAQlNKQgEAAQAAAAAADAAAAHY0LjAu
MzAzMTkAAAAABQBsAAAAjAUAACN+AAD4BQAA5AYAACNTdHJpbmdzAAAAANwMAAC8AAAAI1VTAJgN
AAAQAAAAI0dVSUQAAACoDQAAsAEAACNCbG9iAAAAAAAAAAIAAAFXFaABCQEAAAD6ATMAFgAAAQAA
ACAAAAAIAAAABwAAABgAAAAPAAAAJQAAABAAAAADAAAABwAAAAgAAAABAAAABQAAAAEAAAAAADAD
AQAAAAAABgAqAhcFBgC+AhcFBgB2AQQFDwCLBQAABgCjAeIDBgANAuIDBgDuAeIDBgClAuIDBgBK
AuIDBgBjAuIDBgC6AeIDBgDVAfkCCgB+AsMACgCtBMMADgCeBMMACgBUBMMACgBRBsMABgAUBpoD
BgBZAQQFBgC+BDcFBgBIBM0DEgApARoDEgCKARoDEgARAbgDBgA+ARcFFgABAM4EBgD0A5oDBgAT
A5oDBgA3BJoDBgDkAJoDBgCVAJoDBgDYBuIDAAAAAEcAAAAAAAEAAQABABAArQMAABAAAQABAAEA
EACQBAAAOQABAAUAAQAQADMGAABFAAEADAABABAACAYAAEkAAwAQAAEAEADJBQAASQAEABEAAAAQ
AD4FmgVJAAUAEgAAARAA+AWaBWEABwAWAAYACAZ/AAYAyQWDAAEAQQaHAAEAQQaHABEAoQOLABEA
AQGPABEAdwCTAFAgAAAAAMYA3AIGAAEAWCAAAAAAxgDnAgYAAQBgIAAAAADGALQGlwABAHkgAAAA
AIYY9wQGAAIAgSAAAAAAhhj3BCUAAgCMIAAAAACGCIcAnQAFAKEgAAAAAIYIWANHAAUAqiAAAAAA
hggOBBAABQC0IAAAAACGCG0DoQAGAMsgAAAAAIYAzAZHAAcA0yAAAAAAhgAbBkcABwDbIAAAAACG
GPcEBgAHAPsgAAAAAMYApwamAAcAICEAAAAAxgGfBpcACwAzIQAAAADGAbQGlwAMADUhAAAAAIYY
9wSwAA0ARCEAAAAAhhj3BLAADgBTIQAAAACDGPcEBgAPAFshAAAAAJMIugS2AA8AhyEAAAAAkwjp
ALsADwCOIQAAAACTCPUAwAAPAJYhAAAAAJYIJwbGABAAnSEAAAAAhhj3BAYAEAClIQAAAACRGP0E
ywAQAAAAAQDQBgAAAQCzBAAAAgDTBQAAAwBiBAAAAQDzAgAAAQDzAgAAAQBQAAAAAgC5AAAAAwCz
BAAABABiBAAAAQCzBAAAAQDQBgAAAQBXBgAAAQBXBgAAAQDzAgkA9wQBABEA9wQGABkA9wQKACkA
9wQQADEA9wQQADkA9wQQAEEA9wQQAEkA9wQQAFEA9wQQAFkA9wQQAGEA9wQQAGkA9wQGAJkA9wQG
ALkA9wQVAMkA9wQGAIkA3AIGAIkA5wIGAIkAWAAbANEAIwQgAHEA9wQlAHEAswQvAHEA0wUzAHkA
GgA3AHEAggM8AHEAkQNBAHEAiQMBANkA9wQQAHEAzAZHAHEAGwZHAIkA9wQGAOEAAQZLAIkA5wVS
AJEA9wQGAPEApwBYAPEA1AZfAKEA9wRlAMEA9wQGAC4ACwDqAC4AEwDzAC4AGwASAS4AIwAbAS4A
KwBEAS4AMwBEAS4AOwBEAS4AQwAbAS4ASwBKAS4AUwBEAS4AWwBhAUMAYwCrAakAcwASAckAcwAS
AeEAewCrAeMAawCrAQMAAQAHAAUACAAHAAAAiwDPAAAAXAPTAAAAJgTXAAAAcQPTAAAAvgTbAAAA
CQHgAAAAKwblAAIABgADAAIABwAFAAEACAAHAAEACQAJAAIAEwALAAIAFAANAAEAFQANAAIAFgAP
AASAAAABAAAAAAAAAAAAAAAAACMAAAAEAAAAAAAAAAAAAABtAG4AAAAAABAAAAAAAAAAAAAAAHYA
YQYAAAAAEAAAAAAAAAAAAAAAdgB+BgAAAAAEAAAAAAAAAAAAAABtAJoDAAAAABAAAAAAAAAAAAAA
AHYAbAQAAAAAAAAAAAEAAABIBQAAAAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAAR2V0SW50
MzIAU0NfYWY3YzMyNGUwMjkzNDhkM2JlN2E5ZWRhZmI0MjYyNzYAPE1vZHVsZT4ASW5wdXRJRABn
ZXRfQ29tcG9uZW50TWV0YURhdGEAbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAGdldF9FcnJvckNv
ZGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1lAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVz
b3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRl
AENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUA
RGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRs
ZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRy
aWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25B
dHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RB
dHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVu
dHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRp
YmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUAU3lzdGVtLlJ1bnRp
bWUuVmVyc2lvbmluZwBTdHJpbmcAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDX2FmN2MzMjRlMDI5
MzQ4ZDNiZTdhOWVkYWZiNDI2Mjc2LmRsbABnZXRfRXJyb3JDb2RlX0lzTnVsbABzZXRfRXJyb3JE
ZXNjcmlwdGlvbl9Jc051bGwAU2V0TnVsbABzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2Ny
aXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0u
UmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAHNldF9FcnJvckRlc2NyaXB0aW9u
AEdldEVycm9yRGVzY3JpcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXRO
YW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcADovpPl
haUwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2Vy
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIALmN0b3IALmNjdG9yAFN5
c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5S
ZXNvdXJjZXMAU0NfYWY3YzMyNGUwMjkzNDhkM2JlN2E5ZWRhZmI0MjYyNzYuUHJvcGVydGllcy5S
ZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDX2FmN2MzMjRlMDI5MzQ4ZDNiZTdh
OWVkYWZiNDI2Mjc2LlByb3BlcnRpZXMAVmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0
Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAT2JqZWN0AEVuZE9mUm93
c2V0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBv
bmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlw
ZWxpbmVIb3N0AOi+k+WFpTBfUHJvY2Vzc0lucHV0AOi+k+WFpTBfUHJvY2Vzc0lucHV0Um93AE5l
eHRSb3cAZ2V0X0Fzc2VtYmx5AAAAAAA94GXVbAZcIABJAHMATgB1AGwAbAAgAF5cJ2C+i25/Ok4g
AEYAYQBsAHMAZQACMPeLOk7lixdSS408UAIwAQmTj2VRIAAwAAFxUwBDAF8AYQBmADcAYwAzADIA
NABlADAAMgA5ADMANAA4AGQAMwBiAGUANwBhADkAZQBkAGEAZgBiADQAMgA2ADIANwA2AC4AUABy
AG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAA0JUykUZv00mU7EZq9V/pkwAE
IAEBCAMgAAEFIAEBEREEIAEBDgUgAQERWQQgABJpBCABDggJIAMBEj0dCBJBAwYSPQMGHQgEIAEI
CAQgAQIIBSACAQgcAyAAAgYgAgIOEXUFIAEdCAgGAAESeRF9BSAAEoCBByACAQ4SgIEIt3pcVhk0
4IkIiYRdzYCAzJEDBhIUAwYSGAMGEkUDBhJRAwYSVQMGEiAFIAEBEgwDIAAIBCABAQIJIAQBCA4S
PRJBBSABARJFBAAAElEEAAASVQUAAQESVQQAABIgAwAAAQMoAAgDKAACAygADgQIABJRBAgAElUE
CAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAj
U0NfYWY3YzMyNGUwMjkzNDhkM2JlN2E5ZWRhZmI0MjYyNzYAAAUBAAAAABYBABFDb3B5cmlnaHQg
QCAgMjAyNAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNw
bGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJl
c291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVy
ZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJj
ZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAADsMQAAAAAAAAAAAAAG
MgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+DEAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2Nv
cmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAEMAXwBhAGYANwBjADMAMgA0AGUAMAAyADkAMwA0ADgAZAAzAGIAZQA3AGEAOQBlAGQAYQBm
AGIANAAyADYAMgA3ADYAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
MAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAGEAZgA3AGMAMwAy
ADQAZQAwADIAOQAzADQAOABkADMAYgBlADcAYQA5AGUAZABhAGYAYgA0ADIANgAyADcANgAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMgA0AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMA
AAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AYQBm
ADcAYwAzADIANABlADAAMgA5ADMANAA4AGQAMwBiAGUANwBhADkAZQBkAGEAZgBiADQAMgA2ADIA
NwA2AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGEAZgA3
AGMAMwAyADQAZQAwADIAOQAzADQAOABkADMAYgBlADcAYQA5AGUAZABhAGYAYgA0ADIANgAyADcA
NgAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4
AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAGDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="指定 Microsoft Visual Studio Tools for Applications 项目的名称。项目名称在包中必须是唯一的。"
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_af7c324e029348d3be7a9edafb426276</property>
                    <property
                      dataType="System.String"
                      description="指定脚本使用的编程语言。"
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="指定以逗号分隔的只读变量列表。"
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="指定以逗号分隔的读/写变量列表。"
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="该脚本中存在断点列表。"
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="执行校验和检查以便根据编译后的代码匹配组件元数据。"
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">AA</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Get Error Description.Inputs[输入 0]"
                      hasSideEffects="true"
                      name="输入 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Get Error Description.Inputs[输入 0].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[查找错误输出].Columns[ErrorCode]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Get Error Description.Outputs[输出 0]"
                      name="输出 0"
                      synchronousInputId="Package\Foreach File in Folder\Extract Sample Currency Data\Get Error Description.Inputs[输入 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Get Error Description.Outputs[输出 0].Columns[ErrorDescription]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Get Error Description.Outputs[输出 0].Columns[ErrorDescription]"
                          name="ErrorDescription" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="查找;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; 保留所有权利; http://www.microsoft.com/sql/support;6"
                  description="通过在表中查找值，将其他列与数据流联接起来。例如，将 &quot;employee id&quot; 列与 employees 表联接，以获取 &quot;hire date&quot; 和 &quot;employee name&quot;。建议在可将查找表放入内存中的情况下使用此转换。"
                  name="Lookup Currency Key"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="指定生成查找表的 SQL 语句。"
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [dbo].[DimCurrency]
WHERE [CurrencyAlternateKey]
IN ('ARS', 'AUD', 'BRL', 'CAD', 'CNY',
    'DEM', 'EUR', 'FRF', 'GBP', 'JPY',
    'MXN', 'SAR', 'USD', 'VEB')</property>
                    <property
                      dataType="System.String"
                      description="指定使用参数生成查找表的 SQL 语句。"
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT * FROM [dbo].[DimCurrency]
WHERE [CurrencyAlternateKey]
IN ('ARS', 'AUD', 'BRL', 'CAD', 'CNY',
    'DEM', 'EUR', 'FRF', 'GBP', 'JPY',
    'MXN', 'SAR', 'USD', 'VEB')) [refTable]
where [refTable].[CurrencyAlternateKey] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="指定用于访问引用数据集的连接类型。"
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="指定查找表的缓存类型。"
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="指定查找转换如何处理在引用数据集中无匹配项的行。"
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">0</property>
                    <property
                      dataType="System.Int32"
                      description="指定为在引用数据集中没有匹配项的行分配的缓存百分比。"
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="引用缓存在 32 位平台上的最大内存使用量。"
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="引用缓存在 64 位平台上的最大内存使用量。"
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="指示是否引用 XML 格式的元数据。"
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="CurrencyKey" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CurrencyAlternateKey" dataType="DT_WSTR" length="3" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CurrencyName" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="指定世系标识符列表，这些标识符映射到 SQLCommand 属性中 SQL 语句使用的参数。列表中的项与项之间用分号分隔。"
                      name="ParameterMap">#{Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出].Columns[CurrencyID]};</property>
                    <property
                      dataType="System.Int32"
                      description="指定当数据源中没有代码页信息时使用的列代码页。"
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="确定在使用完全缓存模式时引用数据中的重复键是否应视作错误。"
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[localhost.AdventureWorksDW2022]"
                      connectionManagerRefId="Package.ConnectionManagers[localhost.AdventureWorksDW2022]"
                      description="用于访问查找数据的连接管理器。"
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Inputs[查找输入]"
                      name="查找输入">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Inputs[查找输入].Columns[CurrencyID]"
                          cachedDataType="wstr"
                          cachedLength="3"
                          cachedName="CurrencyID"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出].Columns[CurrencyID]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="指定某列在引用表中联接的列。"
                              name="JoinToReferenceColumn">CurrencyAlternateKey</property>
                            <property
                              dataType="System.Null"
                              description="指定属于某列复制源的引用表中的列。"
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[查找匹配输出]"
                      errorOrTruncationOperation="查找"
                      errorRowDisposition="RedirectRow"
                      exclusionGroup="1"
                      name="查找匹配输出"
                      synchronousInputId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Inputs[查找输入]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[查找匹配输出].Columns[CurrencyKey]"
                          dataType="i4"
                          errorOrTruncationOperation="复制列"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[查找匹配输出].Columns[CurrencyKey]"
                          name="CurrencyKey"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="指定属于某列复制源的引用表中的列。"
                              name="CopyFromReferenceColumn">CurrencyKey</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[查找无匹配输出]"
                      description="用于处理在引用数据集中无匹配项的行的查找输出。当 NoMatchBehavior 属性设置为“将没有匹配项的行发送至无匹配输出。”时使用此输出。"
                      exclusionGroup="1"
                      name="查找无匹配输出"
                      synchronousInputId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Inputs[查找输入]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[查找错误输出]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="查找错误输出"
                      synchronousInputId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Inputs[查找输入]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[查找错误输出].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[查找错误输出].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[查找错误输出].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[查找错误输出].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="查找;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; 保留所有权利; http://www.microsoft.com/sql/support;6"
                  description="通过在表中查找值，将其他列与数据流联接起来。例如，将 &quot;employee id&quot; 列与 employees 表联接，以获取 &quot;hire date&quot; 和 &quot;employee name&quot;。建议在可将查找表放入内存中的情况下使用此转换。"
                  name="Lookup Date Key"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="指定生成查找表的 SQL 语句。"
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[DimDate]</property>
                    <property
                      dataType="System.String"
                      description="指定使用参数生成查找表的 SQL 语句。"
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[DimDate]) [refTable]
where [refTable].[FullDateAlternateKey] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="指定用于访问引用数据集的连接类型。"
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="指定查找表的缓存类型。"
                      name="CacheType"
                      typeConverter="CacheType">1</property>
                    <property
                      dataType="System.Int32"
                      description="指定查找转换如何处理在引用数据集中无匹配项的行。"
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">0</property>
                    <property
                      dataType="System.Int32"
                      description="指定为在引用数据集中没有匹配项的行分配的缓存百分比。"
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="引用缓存在 32 位平台上的最大内存使用量。"
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="引用缓存在 64 位平台上的最大内存使用量。"
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="指示是否引用 XML 格式的元数据。"
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="DateKey" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="FullDateAlternateKey" dataType="DT_DBDATE" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DayNumberOfWeek" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="EnglishDayNameOfWeek" dataType="DT_WSTR" length="10" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="SpanishDayNameOfWeek" dataType="DT_WSTR" length="10" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="FrenchDayNameOfWeek" dataType="DT_WSTR" length="10" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DayNumberOfMonth" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DayNumberOfYear" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="WeekNumberOfYear" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="EnglishMonthName" dataType="DT_WSTR" length="10" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="SpanishMonthName" dataType="DT_WSTR" length="10" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="FrenchMonthName" dataType="DT_WSTR" length="10" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="MonthNumberOfYear" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CalendarQuarter" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CalendarYear" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CalendarSemester" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="FiscalQuarter" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="FiscalYear" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="FiscalSemester" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="指定世系标识符列表，这些标识符映射到 SQLCommand 属性中 SQL 语句使用的参数。列表中的项与项之间用分号分隔。"
                      name="ParameterMap">#{Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出].Columns[CurrencyDate]};</property>
                    <property
                      dataType="System.Int32"
                      description="指定当数据源中没有代码页信息时使用的列代码页。"
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="确定在使用完全缓存模式时引用数据中的重复键是否应视作错误。"
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[localhost.AdventureWorksDW2022]"
                      connectionManagerRefId="Package.ConnectionManagers[localhost.AdventureWorksDW2022]"
                      description="用于访问查找数据的连接管理器。"
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Inputs[查找输入]"
                      name="查找输入">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Inputs[查找输入].Columns[CurrencyDate]"
                          cachedDataType="dbDate"
                          cachedName="CurrencyDate"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出].Columns[CurrencyDate]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="指定某列在引用表中联接的列。"
                              name="JoinToReferenceColumn">FullDateAlternateKey</property>
                            <property
                              dataType="System.Null"
                              description="指定属于某列复制源的引用表中的列。"
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Outputs[查找匹配输出]"
                      errorOrTruncationOperation="查找"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="查找匹配输出"
                      synchronousInputId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Inputs[查找输入]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Outputs[查找匹配输出].Columns[DateKey]"
                          dataType="i4"
                          errorOrTruncationOperation="复制列"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Outputs[查找匹配输出].Columns[DateKey]"
                          name="DateKey"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="指定属于某列复制源的引用表中的列。"
                              name="CopyFromReferenceColumn">DateKey</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Outputs[查找无匹配输出]"
                      description="用于处理在引用数据集中无匹配项的行的查找输出。当 NoMatchBehavior 属性设置为“将没有匹配项的行发送至无匹配输出。”时使用此输出。"
                      exclusionGroup="1"
                      name="查找无匹配输出"
                      synchronousInputId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Inputs[查找输入]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Outputs[查找错误输出]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="查找错误输出"
                      synchronousInputId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Inputs[查找输入]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Outputs[查找错误输出].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Outputs[查找错误输出].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Outputs[查找错误输出].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Outputs[查找错误输出].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB 目标;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; 保留所有权利; http://www.microsoft.com/sql/support;4"
                  description="OLE DB 目标"
                  name="Sample OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="命令超时前等待的时间(秒)。值为 0，表示无限期等待。"
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="指定用于打开行集的数据库对象的名称。"
                      name="OpenRowset">[NewFactCurrenccyRate]</property>
                    <property
                      dataType="System.String"
                      description="指定包含用于打开行集的数据库对象名的变量。"
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="要执行的 SQL 命令。"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="指定当数据源中没有代码页信息时使用的列代码页。"
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="描述字符数据时，强制使用 DefaultCodePage 属性值。"
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="指定用于访问数据库的模式。"
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="指示是否将为标识列提供的值复制到目标。如果设置为 False，则将在目标中为标识列自动生成值。仅当启用了快速加载时适用。"
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="指示对于包含 Null 值的列是否将 Null 值插入目标中。如果为 False，则对于包含 Null 值的列会将其默认值插入目标中。仅当启用了快速加载时适用。"
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="指定将用于快速加载的选项。仅当启用了快速加载时适用。"
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="指定在插入数据期间何时发出提交命令。如果值为 0，则指定在数据插入结束时发出一个提交命令。仅当启用了快速加载时适用。"
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[localhost.AdventureWorksDW2022]"
                      connectionManagerRefId="Package.ConnectionManagers[localhost.AdventureWorksDW2022]"
                      description="指定用于访问数据库的 OLE DB 运行时连接。"
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB 目标输入]"
                      errorOrTruncationOperation="插入"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB 目标输入">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB 目标输入].Columns[AverageRate]"
                          cachedDataType="r4"
                          cachedName="AverageRate"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB 目标输入].ExternalColumns[AverageRate]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出].Columns[AverageRate]" />
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB 目标输入].Columns[CurrencyID]"
                          cachedDataType="wstr"
                          cachedLength="3"
                          cachedName="CurrencyID"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB 目标输入].ExternalColumns[CurrencyID]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出].Columns[CurrencyID]" />
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB 目标输入].Columns[CurrencyDate]"
                          cachedDataType="dbDate"
                          cachedName="CurrencyDate"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB 目标输入].ExternalColumns[CurrencyDate]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出].Columns[CurrencyDate]" />
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB 目标输入].Columns[EndOfDayRate]"
                          cachedDataType="r4"
                          cachedName="EndOfDayRate"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB 目标输入].ExternalColumns[EndOfDayRate]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出].Columns[EndOfDayRate]" />
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB 目标输入].Columns[CurrencyKey]"
                          cachedDataType="i4"
                          cachedName="CurrencyKey"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB 目标输入].ExternalColumns[CurrencyKey]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[查找匹配输出].Columns[CurrencyKey]" />
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB 目标输入].Columns[DateKey]"
                          cachedDataType="i4"
                          cachedName="DateKey"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB 目标输入].ExternalColumns[DateKey]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Outputs[查找匹配输出].Columns[DateKey]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB 目标输入].ExternalColumns[CurrencyKey]"
                          dataType="i4"
                          name="CurrencyKey" />
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB 目标输入].ExternalColumns[DateKey]"
                          dataType="i4"
                          name="DateKey" />
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB 目标输入].ExternalColumns[AverageRate]"
                          dataType="r4"
                          name="AverageRate" />
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB 目标输入].ExternalColumns[EndOfDayRate]"
                          dataType="r4"
                          name="EndOfDayRate" />
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB 目标输入].ExternalColumns[CurrencyID]"
                          dataType="wstr"
                          length="3"
                          name="CurrencyID" />
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB 目标输入].ExternalColumns[CurrencyDate]"
                          dataType="dbDate"
                          name="CurrencyDate" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Outputs[OLE DB 目标错误输出]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB 目标错误输出"
                      synchronousInputId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB 目标输入]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Outputs[OLE DB 目标错误输出].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Outputs[OLE DB 目标错误输出].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Outputs[OLE DB 目标错误输出].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Outputs[OLE DB 目标错误输出].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach File in Folder\Extract Sample Currency Data\失败的行"
                  componentClassID="Microsoft.FlatFileDestination"
                  contactInfo="平面文件目标;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; 保留所有权利; http://www.microsoft.com/sql/support;1"
                  description="平面文件目标"
                  localeId="1033"
                  name="失败的行"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="指定数据是覆盖目标文件还是追加到目标文件中。"
                      name="Overwrite">false</property>
                    <property
                      dataType="System.Null"
                      description="指定在将任何数据写入目标文件之前应先写入的文本。"
                      expressionType="Notify"
                      name="Header" />
                    <property
                      dataType="System.Boolean"
                      description="启用文本限定符后，指定是否转义从数据中写入到目标文件的文本限定符。"
                      name="EscapeQualifier">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\失败的行.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[错误数据]"
                      connectionManagerRefId="Package.ConnectionManagers[错误数据]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach File in Folder\Extract Sample Currency Data\失败的行.Inputs[平面文件目标输入]"
                      hasSideEffects="true"
                      name="平面文件目标输入">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\失败的行.Inputs[平面文件目标输入].Columns[AverageRate]"
                          cachedDataType="r4"
                          cachedName="AverageRate"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\失败的行.Inputs[平面文件目标输入].ExternalColumns[AverageRate]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出].Columns[AverageRate]" />
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\失败的行.Inputs[平面文件目标输入].Columns[CurrencyID]"
                          cachedDataType="wstr"
                          cachedLength="3"
                          cachedName="CurrencyID"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\失败的行.Inputs[平面文件目标输入].ExternalColumns[CurrencyID]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出].Columns[CurrencyID]" />
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\失败的行.Inputs[平面文件目标输入].Columns[CurrencyDate]"
                          cachedDataType="dbDate"
                          cachedName="CurrencyDate"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\失败的行.Inputs[平面文件目标输入].ExternalColumns[CurrencyDate]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出].Columns[CurrencyDate]" />
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\失败的行.Inputs[平面文件目标输入].Columns[EndOfDayRate]"
                          cachedDataType="r4"
                          cachedName="EndOfDayRate"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\失败的行.Inputs[平面文件目标输入].ExternalColumns[EndOfDayRate]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出].Columns[EndOfDayRate]" />
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\失败的行.Inputs[平面文件目标输入].Columns[ErrorCode]"
                          cachedDataType="i4"
                          cachedName="ErrorCode"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\失败的行.Inputs[平面文件目标输入].ExternalColumns[ErrorCode]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[查找错误输出].Columns[ErrorCode]" />
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\失败的行.Inputs[平面文件目标输入].Columns[ErrorColumn]"
                          cachedDataType="i4"
                          cachedName="ErrorColumn"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\失败的行.Inputs[平面文件目标输入].ExternalColumns[ErrorColumn]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[查找错误输出].Columns[ErrorColumn]" />
                        <inputColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\失败的行.Inputs[平面文件目标输入].Columns[ErrorDescription]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="ErrorDescription"
                          externalMetadataColumnId="Package\Foreach File in Folder\Extract Sample Currency Data\失败的行.Inputs[平面文件目标输入].ExternalColumns[ErrorDescription]"
                          lineageId="Package\Foreach File in Folder\Extract Sample Currency Data\Get Error Description.Outputs[输出 0].Columns[ErrorDescription]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\失败的行.Inputs[平面文件目标输入].ExternalColumns[AverageRate]"
                          dataType="r4"
                          name="AverageRate" />
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\失败的行.Inputs[平面文件目标输入].ExternalColumns[CurrencyID]"
                          dataType="wstr"
                          length="3"
                          name="CurrencyID" />
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\失败的行.Inputs[平面文件目标输入].ExternalColumns[CurrencyDate]"
                          dataType="dbDate"
                          name="CurrencyDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\失败的行.Inputs[平面文件目标输入].ExternalColumns[EndOfDayRate]"
                          dataType="r4"
                          name="EndOfDayRate" />
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\失败的行.Inputs[平面文件目标输入].ExternalColumns[ErrorCode]"
                          dataType="i4"
                          name="ErrorCode" />
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\失败的行.Inputs[平面文件目标输入].ExternalColumns[ErrorColumn]"
                          dataType="i4"
                          name="ErrorColumn" />
                        <externalMetadataColumn
                          refId="Package\Foreach File in Folder\Extract Sample Currency Data\失败的行.Inputs[平面文件目标输入].ExternalColumns[ErrorDescription]"
                          dataType="wstr"
                          length="50"
                          name="ErrorDescription" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach File in Folder\Extract Sample Currency Data.Paths[平面文件源输出]"
                  endId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Inputs[查找输入]"
                  name="平面文件源输出"
                  startId="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data.Outputs[平面文件源输出]" />
                <path
                  refId="Package\Foreach File in Folder\Extract Sample Currency Data.Paths[查找匹配输出]"
                  endId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Inputs[查找输入]"
                  name="查找匹配输出"
                  startId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[查找匹配输出]" />
                <path
                  refId="Package\Foreach File in Folder\Extract Sample Currency Data.Paths[查找匹配输出1]"
                  endId="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination.Inputs[OLE DB 目标输入]"
                  name="查找匹配输出"
                  startId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key.Outputs[查找匹配输出]" />
                <path
                  refId="Package\Foreach File in Folder\Extract Sample Currency Data.Paths[查找错误输出]"
                  endId="Package\Foreach File in Folder\Extract Sample Currency Data\Get Error Description.Inputs[输入 0]"
                  name="查找错误输出"
                  startId="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key.Outputs[查找错误输出]" />
                <path
                  refId="Package\Foreach File in Folder\Extract Sample Currency Data.Paths[输出 0]"
                  endId="Package\Foreach File in Folder\Extract Sample Currency Data\失败的行.Inputs[平面文件目标输入]"
                  name="输出 0"
                  startId="Package\Foreach File in Folder\Extract Sample Currency Data\Get Error Description.Outputs[输出 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{27F5777D-0548-4B92-8898-BF34B5859D37}"
          DTS:ObjectName="{27F5777D-0548-4B92-8898-BF34B5859D37}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::varFileName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--此 CDATA 部分包含包的布局信息。该部分包括(x,y)坐标、宽度和高度之类的信息。-->
<!--如果您手动编辑此部分并且出错，则可以删除此部分。 -->
<!--该包仍将能够正常加载，但以前的布局信息将丢失，并且设计器将自动在设计图面上重新排列这些元素。-->
<Objects
  Version="8">
  <!--下面的每个节点都将包含不会影响运行时行为的属性。-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="238,42"
          Id="Package\Foreach File in Folder\Extract Sample Currency Data"
          TopLeft="5.5,5.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="248,103"
          Size="248,146"
          Id="Package\Foreach File in Folder"
          TopLeft="663.333306974836,274.733335516718" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach File in Folder\Extract Sample Currency Data">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="238,42"
          Id="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key"
          TopLeft="812,316.666666666667" />
        <NodeLayout
          Size="238,42"
          Id="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key"
          TopLeft="812,431.333333333333" />
        <NodeLayout
          Size="238,42"
          Id="Package\Foreach File in Folder\Extract Sample Currency Data\Extract Sample Currency Data"
          TopLeft="812,202" />
        <NodeLayout
          Size="238,42"
          Id="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination"
          TopLeft="812,546" />
        <EdgeLayout
          Id="Package\Foreach File in Folder\Extract Sample Currency Data.Paths[查找匹配输出1]"
          TopLeft="931,473.333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,72.666666666667"
              Start="0,0"
              End="0,65.166666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,65.166666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-30.47265625,26.7444661458335,60.9453125,11.677734375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach File in Folder\Extract Sample Currency Data.Paths[查找匹配输出]"
          TopLeft="931,358.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,72.6666666666659"
              Start="0,0"
              End="0,65.1666666666659">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,65.1666666666659" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-30.47265625,26.744466145833,60.9453125,11.677734375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach File in Folder\Extract Sample Currency Data.Paths[平面文件源输出]"
          TopLeft="931,244">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,72.666666666667"
              Start="0,0"
              End="0,65.166666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,65.166666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="The data flow extracts data from a file, looks up values in the CurrencyKey column in the DimCurrency table &#xA;and the DateKey column in the DimDate table, and writes the data to the NewFactCurrencyRate table."
          ParentId="Package\Foreach File in Folder\Extract Sample Currency Data"
          FontInfo="{assembly:Null}"
          Size="650,54"
          Id="abf09310-1d22-47c5-8ed6-62854453a51d"
          TopLeft="1152.99999980132,637.400002148946" />
        <NodeLayout
          Size="238,42"
          Id="Package\Foreach File in Folder\Extract Sample Currency Data\Get Error Description"
          TopLeft="1157.49995400508,319.800002541542" />
        <EdgeLayout
          Id="Package\Foreach File in Folder\Extract Sample Currency Data.Paths[查找错误输出]"
          TopLeft="1050,339.233334604105">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="107.499954005084,0"
              Start="0,0"
              End="99.9999540050844,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="99.9999540050844,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="10.9589613775422,5,78.08203125,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="127,42"
          Id="Package\Foreach File in Folder\Extract Sample Currency Data\失败的行"
          TopLeft="1213.66662904951,446.333336880472" />
        <EdgeLayout
          Id="Package\Foreach File in Folder\Extract Sample Currency Data.Paths[输出 0]"
          TopLeft="1276.8332915273,361.800002541542">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,84.5333343389299"
              Start="0,0"
              End="0,77.0333343389299">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,77.0333343389299" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Currency Key">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach File in Folder\Extract Sample Currency Data\Lookup Date Key">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[DimDate]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach File in Folder\Extract Sample Currency Data\Sample OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>